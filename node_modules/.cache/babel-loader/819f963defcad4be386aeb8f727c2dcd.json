{"remainingRequest":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\babel-loader\\lib\\index.js!E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\src\\components\\Chart Library\\02-柱图\\01-单柱图\\BarChart3D.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\src\\components\\Chart Library\\02-柱图\\01-单柱图\\BarChart3D.vue","mtime":1689736909225},{"path":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\babel.config.js","mtime":1669272750000},{"path":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669272698000},{"path":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\babel-loader\\lib\\index.js","mtime":1669272708000},{"path":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669272698000},{"path":"E:\\WeChat\\WeChat Files\\wxid_zirckt8po0i122\\FileStorage\\File\\2023-07\\0718\\webpage\\node_modules\\vue-loader\\lib\\index.js","mtime":1669272702000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";AAKA;AACA;EACAA;IACAC;MACAC;MACAC;QACA;MACA;IACA;IACAC;MACAF;MACAC;QACA;MACA;IACA;IACAE;MACAH;MACAC;IACA;IACAG;MACAJ;MACAC;IACA;IACAI;MACAL;MACAC;IACA;IACAK;MACAN;MACAC;QACA;MACA;IACA;IACAM;MACAP;MACAC;QACA,QACA;UAAAO;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA,GACA;UAAAD;UAAAC;QAAA,EACA;MACA;IACA;IACAC;MACAV;MACAC;QACA;UACAU;UACAC;QACA;MACA;IACA;IACAC;MACAb;MACAC;QACA;UACAa;UACAC;UACAC;UACAC;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;QACAC;UACAC;UACAC;UACAC;YACA;YACA;UACA;UACAC;YACA5B;YACA6B;YACAC;cACAC;YACA;UACA;QACA;QACAC;QACAC;UACAjC;UACAkB;UACAgB;YACAT;YACAU;cACAC;YACA;UACA;UACAC;YACAZ;UACA;UACAa;YACAC;YACAC;YACAC;UACA;QACA;QACAC;UACAjB;UACAzB;UACAQ;UACA;UACAmC;YACAJ;YACAK;UACA;;UACAP;YACAZ;UACA;UACAoB;YACApB;UACA;UACAS;YACAC;cACAC;YACA;UACA;UACAE;YACAC;YACAE;UACA;UACAK;YACArB;YACAsB;cACAX;YACA;UACA;QACA;QACAY,SACA;UACA9B;UACA+B;UACAjD;UACAY;UACAsC;UACAC;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;;YAEAf;cACA;cACA;cACA;YACA;UACA;;UACAN;YACAL;YACA2B;YACAC;YACAjB;YACAkB;YACAf;YACAZ;cACA;YACA;UACA;QACA,GACA;UACAT;UAAA;UACAlB;UACAkD;UACAC;YACAf;cACA;cACA;cACA;YACA;UACA;;UACAmB;UACAC;UACAC;QACA,GACA;UACAvC;UAAA;UACAlB;UACAkD;UACAQ;UACAH;UACAC;UACAC;UACAE;UACAR;YACAf;cACA;cACA;cACA;YACA;UACA;QACA,GACA;UACAlB;UAAA;UACAlB;UACAkD;UACAtC;UACAgD;UACAD;UACAR;YACAf;cACA;cACA;cACA;YACA;UACA;QACA,GACA;UACAlB;UAAA;UACAlB;UACAkD;UACAQ;UACAH;UACAC;UACAC;UACAN;YACAf;cACA;cACA;cACA;YACA;UACA;;UACAuB;QACA;MAEA;IACA;IACAE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAC;QACAtD;QACAC;QACAsD;QACA;UACAC;QACA;MACA;MACA;QACAC;QACA;MACA;;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACAC;MACA;MACA;QACA;UACAC;QACA;QACA;UACApE;UACAqE;UACAC;QACA;QACAF;MACA;IACA;IACAG;MACA;MACA;QACAxC;QACAyC;UACAC;UACAhD;UACAiD;YACAC;YACAvC;YACAG;UACA;UACAzB;UACAE;QACA;MACA;IACA;IACA4D;MACAT;IACA;IACAU;MACA;MACA;QACA;QACA;QACA;UACA7E;UACAqE;UAAA;UACAC;QACA;QACAQ;QACA;UACA9E;UACAqE;UACAC;QACA;QACA;QACA;UACAtE;UACAqE;UACAC;QACA;MACA;IACA;EACA;EACAS;IACA;MACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAC;IACAb;IACAc;EACA;EACAC;IACA3E;MACA4E;QACA;UACA;UACA;QACA;QACA;QACA;QACA;MACA;;MACAC;IACA;EACA;AACA","names":["props","width","type","default","height","xtype","ytype","maxData","coloreBarChart","rowData","name","value","chartStylr","unit","barWidth","gridData","top","bottom","left","right","data","chartInst","option","setTime","methods","instantiation","tooltip","show","trigger","formatter","axisPointer","animation","label","backgroundColor","grid","xAxis","axisLine","lineStyle","color","axisTick","axisLabel","fontSize","margin","interval","yAxis","nameTextStyle","padding","splitLine","splitArea","areaStyle","series","avoidLabelOverlap","barMaxWidth","itemStyle","position","distance","fontFamily","symbol","symbolOffset","symbolSize","symbolPosition","zlevel","barGap","rowDataChart","n","botData","sum","topData","tooltipShuffling","clearInterval","count","seriesIndex","dataIndex","noDataShow","title","text","textStyle","align","mousemove","mouseleave","currentIndex","mounted","beforeDestroy","echarts","watch","handler","deep"],"sourceRoot":"src/components/Chart Library/02-柱图/01-单柱图","sources":["BarChart3D.vue"],"sourcesContent":["<template>\r\n  <div :style=\"{ width: width, height: height }\" @mousemove=\"mousemove\" @mouseleave=\"mouseleave\" class=\"bar-chart\" ref=\"chart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: () => {\r\n        return '736px';\r\n      },\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: () => {\r\n        return '360px';\r\n      },\r\n    },\r\n    xtype: {\r\n      type: String,\r\n      default: 'category',\r\n    },\r\n    ytype: {\r\n      type: String,\r\n      default: 'value',\r\n    },\r\n    maxData: {\r\n      type: Number,\r\n      default: 300,\r\n    },\r\n    coloreBarChart: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['#92A33B', '#2663AA', '#968239', '#26A592', '#269BA9'];\r\n      },\r\n    },\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          { name: '语文', value: 60 },\r\n          { name: '数学', value: 30 },\r\n          { name: '英语', value: 80 },\r\n          { name: '物理', value: 40 },\r\n          { name: '化学', value: 55 },\r\n        ];\r\n      },\r\n    },\r\n    chartStylr: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          unit: '单位：人次',\r\n          barWidth: 20,\r\n        };\r\n      },\r\n    },\r\n    gridData: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          top: '18%',\r\n          bottom: '20%',\r\n          left: '10%',\r\n          right: '10%',\r\n        };\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartInst: null,\r\n      option: {},\r\n      setTime: null,\r\n    };\r\n  },\r\n  methods: {\r\n    instantiation() {\r\n      let that = this;\r\n      this.chartInst = echarts.init(this.$refs.chart);\r\n      this.option = {\r\n        tooltip: {\r\n          show: true,\r\n          trigger: 'axis',\r\n          formatter: function (params) {\r\n            const item = params[2];\r\n            return item.name + ' : ' + item.value;\r\n          },\r\n          axisPointer: {\r\n            type: 'cross',\r\n            animation: false,\r\n            label: {\r\n              backgroundColor: '#505765',\r\n            },\r\n          },\r\n        },\r\n        grid: this.gridData,\r\n        xAxis: {\r\n          type: this.xtype,\r\n          data: [],\r\n          axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n              color: '#BFEBFF',\r\n            },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            fontSize: 16,\r\n            margin: 15,\r\n            interval: 0,\r\n          },\r\n        },\r\n        yAxis: {\r\n          show: false,\r\n          type: this.ytype,\r\n          name: this.chartStylr.unit,\r\n          // max: this.maxData,\r\n          nameTextStyle: {\r\n            fontSize: 14,\r\n            padding: [0, 0, 0, 35], // 四个数字分别为上右下左与原位置距离\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#BFEBFF',\r\n            },\r\n          },\r\n          axisLabel: {\r\n            fontSize: 12,\r\n            interval: 0,\r\n          },\r\n          splitArea: {\r\n            show: false,\r\n            areaStyle: {\r\n              color: ['rgba(255,255,255,0.1)', 'rgba(238,238,238,0)'],\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            data: [],\r\n            avoidLabelOverlap: false,\r\n            type: 'bar',\r\n            barWidth: 35,\r\n            barMaxWidth: 'auto',\r\n            itemStyle: {\r\n              // color: {\r\n              //   x: 0,\r\n              //   y: 0,\r\n              //   x2: 0,\r\n              //   y2: 1,\r\n              //   type: 'linear',\r\n              //   global: false,\r\n              //   colorStops: [\r\n              //     {\r\n              //       offset: 0,\r\n              //       color: 'rgba(76, 228, 230, 0.7)'\r\n              //     },\r\n              //     {\r\n              //       offset: 1,\r\n              //       color: 'rgba(24, 134, 144, 1)'\r\n              //     }\r\n              //   ]\r\n              // }\r\n\r\n              color: function (params) {\r\n                return that.coloreBarChart[params.dataIndex];\r\n                // var num = that.coloreBarChart.length\r\n                // return that.coloreBarChart[params.dataIndex % num]\r\n              },\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'top',\r\n              distance: 10,\r\n              color: '#EBEBF9',\r\n              fontFamily: 'Voltage',\r\n              fontSize: 24,\r\n              formatter: function (p) {\r\n                return p.data + '%';\r\n              },\r\n            },\r\n          },\r\n          {\r\n            data: [], //底部三角\r\n            type: 'pictorialBar',\r\n            barMaxWidth: '20',\r\n            itemStyle: {\r\n              color: function (params) {\r\n                return that.coloreBarChart[params.dataIndex];\r\n                // var num = that.coloreBarChart.length\r\n                // return that.coloreBarChart[params.dataIndex % num]\r\n              },\r\n            },\r\n            symbol: 'diamond',\r\n            symbolOffset: [0, '50%'],\r\n            symbolSize: [35, 15],\r\n          },\r\n          {\r\n            data: [], //数据上部分\r\n            type: 'pictorialBar',\r\n            barMaxWidth: '20',\r\n            symbolPosition: 'end',\r\n            symbol: 'diamond',\r\n            symbolOffset: [0, '-50%'],\r\n            symbolSize: [35, 15],\r\n            zlevel: 2,\r\n            itemStyle: {\r\n              color: function (params) {\r\n                return that.coloreBarChart[params.dataIndex];\r\n                // var num = that.coloreBarChart.length\r\n                // return that.coloreBarChart[params.dataIndex % num]\r\n              },\r\n            },\r\n          },\r\n          {\r\n            data: [], //背景阴影\r\n            type: 'bar',\r\n            barMaxWidth: 'auto',\r\n            barWidth: 35,\r\n            barGap: '-100%',\r\n            zlevel: -1,\r\n            itemStyle: {\r\n              color: function (params) {\r\n                return that.coloreBarChart[params.dataIndex] + '60';\r\n                // var num = that.coloreBarChart.length\r\n                // return that.coloreBarChart[params.dataIndex % num]\r\n              },\r\n            },\r\n          },\r\n          {\r\n            data: [], //顶部三角\r\n            type: 'pictorialBar',\r\n            barMaxWidth: '20',\r\n            symbolPosition: 'end',\r\n            symbol: 'diamond',\r\n            symbolOffset: [0, '-50%'],\r\n            symbolSize: [35, 15],\r\n            itemStyle: {\r\n              color: function (params) {\r\n                return that.coloreBarChart[params.dataIndex] + '60';\r\n                // var num = that.coloreBarChart.length\r\n                // return that.coloreBarChart[params.dataIndex % num]\r\n              },\r\n            },\r\n            zlevel: -1,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    rowDataChart() {\r\n      let name = [];\r\n      let value = [];\r\n      // let rate = []\r\n      let botData = [];\r\n      let sum = 0;\r\n      let n = 0; // eslint-disable-line no-unused-vars\r\n      let topData = [];\r\n      this.rowData.forEach((val) => {\r\n        n += Number(val.value);\r\n        name.push(val['name']);\r\n        value.push(val['value']);\r\n        botData.push(1); // 底数小三角\r\n        if (val.value > sum) {\r\n          sum = val.value;\r\n        }\r\n      });\r\n      this.rowData.forEach(() => {\r\n        topData.push(sum + 20); //背景柱子数据\r\n        // value.push(((it.value / n)*100).toFixed(0))\r\n      });\r\n      this.option.xAxis.data = name;\r\n      this.option.series[0].data = value;\r\n      this.option.series[1].data = botData;\r\n      this.option.series[2].data = value;\r\n      this.option.series[3].data = topData;\r\n      this.option.series[4].data = topData;\r\n      this.chartInst.setOption(this.option, true);\r\n    },\r\n    tooltipShuffling() {\r\n      //\r\n      clearInterval(this.setTime);\r\n      let count = 0;\r\n      this.setTime = setInterval(() => {\r\n        if (count == this.rowData.length) {\r\n          count = 0;\r\n        }\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: count,\r\n        });\r\n        count++;\r\n      }, 3000);\r\n    },\r\n    noDataShow() {\r\n      this.chartInst = echarts.init(this.$refs.chart);\r\n      this.chartInst.setOption({\r\n        backgroundColor: 'rgba(255,255,255,.03)',\r\n        title: {\r\n          text: `暂无数据`,\r\n          show: true,\r\n          textStyle: {\r\n            align: 'center',\r\n            color: '#fff',\r\n            fontSize: 32,\r\n          },\r\n          top: 'center',\r\n          left: 'center',\r\n        },\r\n      });\r\n    },\r\n    mousemove() {\r\n      clearInterval(this.setTime);\r\n    },\r\n    mouseleave() {\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.rowData.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 2000);\r\n    },\r\n  },\r\n  mounted() {\r\n    if (!this.rowData.length) {\r\n      this.noDataShow();\r\n      return;\r\n    }\r\n    this.instantiation();\r\n    this.rowDataChart();\r\n    this.mousemove();\r\n    this.mouseleave();\r\n    // this.tooltipShuffling()\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.setTime);\r\n    echarts.init(this.$refs.chart).dispose();\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler(newV) {\r\n        if (!newV.length) {\r\n          this.noDataShow();\r\n          return;\r\n        }\r\n        this.instantiation();\r\n        this.rowDataChart();\r\n        // this.tooltipShuffling()\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>\r\n"]}]}