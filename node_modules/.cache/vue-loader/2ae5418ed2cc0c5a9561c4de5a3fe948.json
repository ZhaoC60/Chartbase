{"remainingRequest":"D:\\web相关\\小项目\\图表库ing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web相关\\小项目\\图表库ing\\src\\components\\Chart Library\\03-饼图\\04-多环图\\DuoHuanTu.vue?vue&type=style&index=0&id=b1eb0eda&lang=less&scoped=true&","dependencies":[{"path":"D:\\web相关\\小项目\\图表库ing\\src\\components\\Chart Library\\03-饼图\\04-多环图\\DuoHuanTu.vue","mtime":1693997610987},{"path":"D:\\web相关\\小项目\\图表库ing\\node_modules\\css-loader\\dist\\cjs.js","mtime":1669272700000},{"path":"D:\\web相关\\小项目\\图表库ing\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1669272708000},{"path":"D:\\web相关\\小项目\\图表库ing\\node_modules\\postcss-loader\\src\\index.js","mtime":1669272700000},{"path":"D:\\web相关\\小项目\\图表库ing\\node_modules\\less-loader\\dist\\cjs.js","mtime":1669273150000},{"path":"D:\\web相关\\小项目\\图表库ing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669272698000},{"path":"D:\\web相关\\小项目\\图表库ing\\node_modules\\vue-loader\\lib\\index.js","mtime":1669272702000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY3MtZGFzaGJvYXJkIHsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBwb2ludGVyLWV2ZW50czogYWxsOw0KfQ0K"},{"version":3,"sources":["DuoHuanTu.vue"],"names":[],"mappings":";AA8NA;AACA;AACA;AACA;AACA;AACA","file":"DuoHuanTu.vue","sourceRoot":"src/components/Chart Library/03-饼图/04-多环图","sourcesContent":["<template>\r\n  <div class=\"cs-dashboard\" :style=\"{ width: width, height: height }\">\r\n    <div class=\"chart\" :style=\"{ width: width, height: height }\" ref=\"chart\" @mouseover=\"mouseover\" @mouseleave=\"mouseleave\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '500px',\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '500px',\r\n    },\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            uid: '周一',\r\n            value: 1,\r\n          },\r\n          {\r\n            uid: '周二',\r\n            value: 2,\r\n          },\r\n          {\r\n            uid: '周三',\r\n            value: 3,\r\n          },\r\n          {\r\n            uid: '周四',\r\n            value: 4,\r\n          },\r\n        ];\r\n      },\r\n    },\r\n    color: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['#89AAFF', '#F496AA', '#71C6FF', '#FFE595', '#051839', '#E6C84F'];\r\n      },\r\n    },\r\n    barWidth: {\r\n      type: String,\r\n      default: () => {\r\n        return '20';\r\n      },\r\n    },\r\n    fontStyle: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          color: '#BFEBFF',\r\n          fontSize: 20,\r\n          fontFamily: 'PingFang',\r\n          interval: 0,\r\n        };\r\n      },\r\n    },\r\n    seriesObj: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            name: 'A',\r\n            stack: 'a',\r\n          },\r\n          {\r\n            name: 'B',\r\n            stack: 'b',\r\n          },\r\n        ];\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      radiusAxisData: [],\r\n      seriesData: [],\r\n      chartInst: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    const that = this;\r\n    let max = 0;\r\n    if (this.rowData && this.rowData.length > 0) {\r\n      this.rowData.forEach((item) => {\r\n        this.radiusAxisData.push(item.uid);\r\n        this.seriesData.push(item.value);\r\n        if (item.value > max) {\r\n          max = item.value;\r\n        }\r\n      });\r\n      //为效果好看追加最大值防止圆环闭环\r\n      this.seriesData.push((max *= 1.1));\r\n    }\r\n    that.initChart();\r\n    that.tooltipShuffling();\r\n    that.mouseover();\r\n    that.mouseleave();\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      const that = this;\r\n      that.chartInst = this.$echarts.init(this.$refs.chart);\r\n      that.option = {\r\n        angleAxis: {\r\n          show: false,\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n        },\r\n        legend: {\r\n          show: true,\r\n          data: ['周一', '周二', '周三', '周四'],\r\n        },\r\n        color: that.color,\r\n        radiusAxis: {\r\n          axisLine: { show: false },\r\n          axisTick: { show: false },\r\n          axisLabel: that.fontStyle,\r\n          type: 'category',\r\n          data: that.radiusAxisData,\r\n          z: 10,\r\n        },\r\n        polar: {\r\n          center: ['50%', '50%'],\r\n        },\r\n        tooltip: {\r\n          show: false,\r\n          position: 'center',\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            barWidth: that.barWidth,\r\n            data: that.seriesData,\r\n            coordinateSystem: 'polar',\r\n            name: that.seriesObj.name,\r\n            stack: that.seriesObj.stack,\r\n            emphasis: {\r\n              focus: 'series',\r\n              itemStyle: {\r\n                color: '#71C6FF',\r\n              },\r\n            },\r\n            legendHoverLink: true,\r\n          },\r\n          // {\r\n          //   type: 'bar',\r\n          //   barWidth: that.barWidth,\r\n          //   data: that.seriesData,\r\n          //   coordinateSystem: 'polar',\r\n          //   name: that.seriesObj[1].name,\r\n          //   stack: that.seriesObj[1].stack,\r\n          //   emphasis: {\r\n          //     focus: 'series',\r\n          //   },\r\n          //   legendHoverLink: true,\r\n          // },\r\n        ],\r\n      };\r\n      that.chartInst.setOption(that.option);\r\n    },\r\n    tooltipShuffling() {\r\n      clearInterval(this.setTime);\r\n      let currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        let dataLen = this.seriesData.length;\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % (dataLen - 1); //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'highlight',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 2000);\r\n    },\r\n    mouseover() {\r\n      clearInterval(this.setTime);\r\n    },\r\n    mouseleave() {\r\n      this.tooltipShuffling();\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.setTime);\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      hendler() {\r\n        this.radiusAxisData = [];\r\n        this.seriesData = [];\r\n        // let max = 0;\r\n        this.rowData.forEach((item) => {\r\n          this.radiusAxisData.push(item.uid);\r\n          this.seriesData.push(item.value);\r\n          //   if (item.value > max) {\r\n          //     max = item.value;\r\n          //   }\r\n        });\r\n        // this.seriesData.push((max *= 1.1));\r\n        this.tooltipShuffling();\r\n        this.initChart();\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.cs-dashboard {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  pointer-events: all;\r\n}\r\n</style>\r\n"]}]}