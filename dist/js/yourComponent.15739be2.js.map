{"version":3,"sources":["webpack:///./src/components/Chart Library/02-柱图/01-单柱图/BarChart.vue","webpack:///src/components/Chart Library/02-柱图/01-单柱图/BarChart.vue","webpack:///./src/components/Chart Library/02-柱图/01-单柱图/BarChart.vue?2508","webpack:///./src/components/Chart Library/02-柱图/01-单柱图/BarChart.vue?6dd6"],"names":["render","_vm","this","_c","_self","ref","staticClass","style","styleBarChart","on","mousemove","mouseleave","staticRenderFns","props","type","Object","default","width","height","xtype","String","ytype","maxData","Number","coloreBarChart","Array","rowData","name","value","chartStylr","unit","barWidth","gridData","top","bottom","left","right","data","chartInst","option","setTime","methods","instantiation","$echarts","init","$refs","chart","tooltip","trigger","axisPointer","animation","label","backgroundColor","grid","xAxis","axisLine","lineStyle","color","axisTick","show","axisLabel","fontSize","interval","yAxis","nameTextStyle","padding","splitLine","splitArea","areaStyle","series","avoidLabelOverlap","itemStyle","graphic","LinearGradient","offset","rowDataChart","forEach","val","push","setOption","tooltipShuffling","clearInterval","count","setInterval","length","dispatchAction","seriesIndex","dataIndex","currentIndex","dataLen","mounted","beforeDestroy","dispose","watch","handler","deep","component"],"mappings":"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","file":"js/yourComponent.15739be2.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"chart\",staticClass:\"bar-chart\",style:(_vm.styleBarChart),on:{\"mousemove\":_vm.mousemove,\"mouseleave\":_vm.mouseleave}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div :style=\"styleBarChart\" class=\"bar-chart\" ref=\"chart\" @mousemove=\"mousemove\" @mouseleave=\"mouseleave\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    styleBarChart: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          width: '500px',\r\n          height: '300px',\r\n        };\r\n      },\r\n    },\r\n    xtype: {\r\n      type: String,\r\n      default: 'category',\r\n    },\r\n    ytype: {\r\n      type: String,\r\n      default: 'value',\r\n    },\r\n    maxData: {\r\n      type: Number,\r\n      default: 300,\r\n    },\r\n    coloreBarChart: {\r\n      type: Array,\r\n      default: () => {\r\n        return ['#00BFFF', '#73FFFF'];\r\n      },\r\n    },\r\n    rowData: {\r\n      type: Array,\r\n      default: () => {\r\n        return [\r\n          {\r\n            name: '0601',\r\n            value: '10',\r\n          },\r\n          {\r\n            name: '0602',\r\n            value: '20',\r\n          },\r\n          {\r\n            name: '0603',\r\n            value: '50',\r\n          },\r\n          {\r\n            name: '0604',\r\n            value: '20',\r\n          },\r\n          {\r\n            name: '0605',\r\n            value: '30',\r\n          },\r\n          {\r\n            name: '0606',\r\n            value: '45',\r\n          },\r\n          {\r\n            name: '0607',\r\n            value: '12',\r\n          },\r\n          {\r\n            name: '0608',\r\n            value: '23',\r\n          },\r\n        ];\r\n      },\r\n    },\r\n    chartStylr: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          unit: '单位：人次',\r\n          barWidth: 20,\r\n        };\r\n      },\r\n    },\r\n    gridData: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          top: '20%',\r\n          bottom: '13%',\r\n          left: '10%',\r\n          right: '10%',\r\n        };\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartInst: null,\r\n      option: {},\r\n      setTime: null,\r\n    };\r\n  },\r\n  methods: {\r\n    instantiation() {\r\n      this.chartInst = this.$echarts.init(this.$refs.chart);\r\n      this.option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            animation: false,\r\n            label: {\r\n              backgroundColor: '#505765',\r\n            },\r\n          },\r\n        },\r\n        grid: this.gridData,\r\n        xAxis: {\r\n          type: this.xtype,\r\n          data: [],\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#BFEBFF',\r\n            },\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            fontSize: 14,\r\n            interval: 0,\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: this.ytype,\r\n          name: this.chartStylr.unit,\r\n          // max: this.maxData,\r\n          nameTextStyle: {\r\n            fontSize: 14,\r\n            padding: [0, 0, 0, 35], // 四个数字分别为上右下左与原位置距离\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#BFEBFF',\r\n            },\r\n          },\r\n          axisLabel: {\r\n            fontSize: 14,\r\n            interval: 0,\r\n          },\r\n          splitArea: {\r\n            show: true,\r\n            areaStyle: {\r\n              color: ['rgba(255,255,255,0.1)', 'rgba(238,238,238,0)'],\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            data: [],\r\n            avoidLabelOverlap: false,\r\n            type: 'bar',\r\n            barWidth: this.chartStylr.barWidth,\r\n            itemStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: this.coloreBarChart[0] },\r\n                { offset: 1, color: this.coloreBarChart[1] },\r\n              ]),\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    rowDataChart() {\r\n      let name = [];\r\n      let value = [];\r\n      this.rowData.forEach((val) => {\r\n        name.push(val['name']);\r\n        value.push(val['value']);\r\n      });\r\n      this.option.xAxis.data = name;\r\n      this.option.series[0].data = value;\r\n      this.chartInst.setOption(this.option, true);\r\n    },\r\n    tooltipShuffling() {\r\n      //\r\n      clearInterval(this.setTime);\r\n      let count = 0;\r\n      this.setTime = setInterval(() => {\r\n        if (count == this.rowData.length) {\r\n          count = 0;\r\n        }\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: count,\r\n        });\r\n        count++;\r\n      }, 1000);\r\n    },\r\n    mousemove() {\r\n      clearInterval(this.setTime);\r\n    },\r\n    mouseleave() {\r\n      var currentIndex = -1;\r\n      this.setTime = setInterval(() => {\r\n        var dataLen = this.rowData.length;\r\n        // 取消之前高亮的图形\r\n        this.chartInst.dispatchAction({\r\n          type: 'downplay',\r\n          seriesIndex: 0, //表示series中的第几个data数据循环展示\r\n          dataIndex: currentIndex,\r\n        });\r\n        currentIndex = (currentIndex + 1) % dataLen; //+1表示每次跳转一个\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n        // 显示 tooltip\r\n        this.chartInst.dispatchAction({\r\n          type: 'showTip',\r\n          seriesIndex: 0,\r\n          dataIndex: currentIndex,\r\n        });\r\n      }, 2000);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.instantiation();\r\n    this.rowDataChart();\r\n    this.tooltipShuffling();\r\n    this.mousemove();\r\n    this.mouseleave();\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.setTime);\r\n    this.$echarts.init(this.$refs.chart).dispose();\r\n  },\r\n  watch: {\r\n    rowData: {\r\n      handler() {\r\n        this.instantiation();\r\n        this.rowDataChart();\r\n        this.tooltipShuffling();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarChart.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BarChart.vue?vue&type=template&id=520f3133&scoped=true\"\nimport script from \"./BarChart.vue?vue&type=script&lang=js\"\nexport * from \"./BarChart.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"520f3133\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}